---
import es_about from "~/data/i18n/es/about.json";
import es_bible from "~/data/i18n/es/bible.json";
import es_common from "~/data/i18n/es/common.json";
import es_libraries from "~/data/i18n/es/libraries.json";
import es_store from "~/data/i18n/es/store.json";
import en_about from "~/data/i18n/en/about.json";
import en_bible from "~/data/i18n/en/bible.json";
import en_common from "~/data/i18n/en/common.json";
import en_libraries from "~/data/i18n/en/libraries.json";
import en_store from "~/data/i18n/en/store.json";

let translations = {
  es: {
    about: es_about,
    bible: es_bible,
    common: es_common,
    libraries: es_libraries,
    store: es_store,
  },
  en: {
    about: en_about,
    bible: en_bible,
    common: en_common,
    libraries: en_libraries,
    store: en_store,
  },
};

const { key } = Astro.props;

//var translations = [];
//Object.entries(lmap).forEach((entry) => {
//  const [lang, items] = entry;
//  translations.push({
//    lang: lang,
//    label: items[key] ?? key,
//  });
//});
---

{
  translations && translations.length ? (
    translations.map(({ lang, label }) => <span lang={lang}>{label}</span>)
  ) : (
    <span>{key}</span>
  )
}

<style is:global>
  html[lang] [lang] {
    display: none;
  }
  html[lang="en"] [lang="en"],
  html[lang="it"] [lang="it"],
  html[lang="fr"] [lang="fr"],
  html[lang="de"] [lang="de"],
  html[lang="ru"] [lang="ru"],
  html[lang="af"] [lang="af"],
  html[lang="cs"] [lang="cs"],
  html[lang="zh"] [lang="zh"],
  html[lang="nl"] [lang="nl"],
  html[lang="ro"] [lang="ro"],
  html[lang="sv"] [lang="sv"],
  html[lang="bg"] [lang="bg"],
  html[lang="es"] [lang="es"] {
    display: unset;
  }
</style>
