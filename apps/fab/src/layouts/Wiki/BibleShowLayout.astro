---
import Layout from "~/layouts/PageLayout.astro";
import { SITE } from "~/config.mjs";
import { Banner } from "@dbs/ui";

const { id } = Astro.params;
const bibleResponse = await fetch(`${SITE.apiUrl}/bibles/${id}.json`);
const bible = await bibleResponse.json();

let translations = {
		'link_sections': {
			'print': {
				title: 'Purchase a "Print Version" of this Bible'
			},
			'pdf': {
				title: 'Direct Downloads of Ancient and Modern Texts'
			},
			'web': {
				title: 'Websites we know of that host this Bible.'
			},
			'audio': {
				title: 'Audio Bibles available for download'
			},
			'audio_web': {
				title: 'Audio Bibles to listen to online'
			},
			'app': {
				title: 'Bible Apps for your Mobile Devices.'
			},
			'archive': {
				title: 'Bibles available in a Library or Collection'
			},
			'historic': {
				title: 'Historic Bible Scans'
			},
			'cat': {
				title: 'A Storage Site for Bible Data'
			},
			'video_web': {
				title: 'Video Bibles to watch online'
			},
		}
	};

const groupBy = (arr, field) => {
   let result = [];
   result = arr.reduce((r, a) => {
      r[a[field]] = r[a[field]] || [];
      r[a[field]].push(a);
      return r;
   }, Object.create(null));
   return result;
};

function fileSize(size) {
	var i = Math.floor(Math.log(size) / Math.log(1024));
	return (size / Math.pow(1024, i)).toFixed(2) * 1 + "\xa0" + ['B', 'kB', 'MB', 'GB', 'TB'][i];
}

const bible_link_types = groupBy(bible.links,'type')
---

<Layout>
  <Banner title={bible.title} subtitle={bible.title_vernacular} />

<div class="rounded-lg bg-white dark:bg-stone-900 shadow-lg aside-bar m-4">
	<div class="flex flex-row justify-center py-2">
	{bible.iso ? 
		<div class="flex flex-col dark:border-stone-700 px-6 py-2 text-center">
			<span class="mt-2 leading-6 text-gray-500">Language</span>
			<a class="text-lg font-extrabold text-primary-600" href="/languages/{bible.iso}">{bible.language.name} {bible.language.autonym ?? ''}</a>
		</div> : '' }

	{bible.alphabet ? 
		<div class="flex flex-col px-6 py-2 text-center">
			<span class="mt-2 leading-6 text-gray-500">Alphabet</span>
			<a class="text-lg font-extrabold text-primary-600" href="/alphabets/{bible.script}">
				{bible.alphabet.name ?? bible.script}
			</a>
		</div> : ''}
	{bible.date ? 
		<div class="flex flex-col px-6 py-2 text-center">
			<span class="mt-2 leading-6 text-gray-500">Date</span>
			<span class="text-lg font-extrabold text-primary-600">{bible.date}</span>
		</div> : ''}

	{bible.country ? 
		<div class="flex flex-col dark:border-stone-700 px-6 py-2 text-center">
			<span class="mt-2 leading-6 text-gray-500">Country</span>
			<a class="text-lg font-extrabold text-primary-600" href="/countries/{bible.country_id}">
				{bible.country.name}
			</a>
	  	</div> : ''}
	</div>
</div>

<section class="text-gray-600 flex flex-row px-4">

	{bible.description.length > 64 ? <div class="hidden sm:block lg:w-1/4 prose mx-auto dark:prose-invert" set:html={bible.description}></div> : ''}
	<div class={`container mx-auto px-5` + (bible.description ? ' lg:w-3/4' : '')}>
		<div class="col-span-2">
			{Object.keys(groupBy(bible.links,'type')).map(type => (
					<div class="bg-gray-50 dark:bg-stone-800 my-4 rounded shadow-md">
						{(translations['link_sections'][type]) ? 
						<div class="px-4 py-5 border-b border-gray-200 dark:border-stone-600 sm:px-6">
							<h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-stone-200" set:html={ translations['link_sections'][type]['title'] }></h3>
							<p class="mt-1 text-sm text-gray-500" set:html={ translations['link_sections'][type]['description'] }></p>
						</div> : '' }
					<div>
					{Object.keys(groupBy(bible.links.filter(link => link.type == type),'provider')).map(provider => (
					<div class="bg-gray-100 dark:bg-stone-800 flex flex-row justify-between p-4">
						<div class="flex w-1/5 dark:text-stone-200 text-center justify-center place-items-center">{provider}</div>
						<div class="w-4/5 grid grid-cols-2">
							{bible.links.map(bible_link => (
								<div class="empty:hidden">{(bible_link.type == type && bible_link.provider == provider ?
								<a class="p-2 bg-gray-200 dark:bg-stone-900 hover:bg-gray-300 dark:text-stone-200 m-2 rounded flex flex-row justify-between" href={bible_link.url}>
									<span class="px-2 flex-grow truncate">{bible_link.title}</span>
									{bible_link.filesize ? <span class="text-xs justify-center place-self-center">{fileSize(bible_link.filesize)}</span> : ''}
									{
										(['pdf','epub','mobi','zip'].includes(bible_link.url.split('.').pop())) ? 
											<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M19 13l-7 7-7-7m14-8l-7 7-7-7" /></svg> 
											: <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" /></svg>
									}
								</a>
								: '')}</div>
							))}
						</div>
					</div>
					))}
				</div>
			</div>
			))}
		</div>
	</div>
</section>

</Layout>

<style>

.aside-bar {
	display: flex; 
	padding-top: 0.5rem;
	padding-bottom: 0.5rem; 
	padding-left: 1.5rem;
	padding-right: 1.5rem; 
	text-align: center; 
	flex-direction: column;
}

</style>